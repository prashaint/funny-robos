{"version":3,"sources":["serviceWorker.js","Card.js","CardList.js","SearchBox.js","Scroll.js","robot.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","id","name","email","className","alt","src","text-align","CardList","robots","map","user","idx","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","robot","App","onSearchChange","event","setState","target","value","state","this","filterRobot","filter","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82eceeaa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n\treturn (\r\n\t\t\t\r\n\t\t\t<div className='bg-light-green dark-gray tc dib pa2 br4 ma2 grow bw4 shadow-5 cardGradient'>\r\n\t\t\t\t<img alt='My Robo!' src={`https://robohash.org/${name}?200x200`} />\r\n\t\t\t\t<div text-align='center'>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n\treturn (\r\n\t\t\t<div className=\"flex flex-wrap justify-center bw3 pb3 pt3 ma2 dib\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trobots.map((user, idx) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\t key={idx}\r\n\t\t\t\t\t\t\t id={robots[idx].id} \r\n\t\t\t\t\t\t\t name={robots[idx].name} \r\n\t\t\t\t\t\t\t email={robots[idx].email} />\r\n\t\t\t\t\t\t );\r\n\t\t\t\t\t   })\r\n\t\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t  );\r\n\r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n\r\n\treturn (\r\n\t\t<div className='bg-light-green dark-gray tc dib pa2 br4 ma2 grow bw4 shadow-5 cardGradient'>\r\n\t\t<h2>Search your favourites robo family member here!</h2>\r\n\t\t<h2><input className='pa2 bs4 br4 b--purple bg-light-blue dark-blue'\r\n\t\t\t   name='SearchBox' \r\n\t\t\t   type='search' \r\n\t\t\t   placeholder='Enter robo name to search' \r\n\t\t\t   onChange={searchChange}/></h2>\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t\t<div style={{overflow: 'Scroll', border: '1px solid navy', height: '500px' }}> \r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Scroll;\r\n","export const robot = [\r\n{\r\n\t\"id\": 1,\r\n    \"name\": \"Dinesh Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 2,\r\n    \"name\": \"Shubh Lata Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 3,\r\n    \"name\": \"Rajesh Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 4,\r\n    \"name\": \"Rekha Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 5,\r\n    \"name\": \"Vinod Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 6,\r\n    \"name\": \"Mamta Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 7,\r\n    \"name\": \"Prashant Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 8,\r\n    \"name\": \"Pragati Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 9,\r\n    \"name\": \"Pradeep Dubey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 10,\r\n    \"name\": \"Priya Dubey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 11,\r\n    \"name\": \"Aradhya Dubey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 12,\r\n    \"name\": \"Shashank Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 13,\r\n    \"name\": \"Priyam Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 14,\r\n    \"name\": \"Deeksha Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 15,\r\n    \"name\": \"Swati Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 16,\r\n    \"name\": \"Shivani Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 17,\r\n    \"name\": \"Shivesh Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 18,\r\n    \"name\": \"Nishant Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 19,\r\n    \"name\": \"Sandeep Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 20,\r\n    \"name\": \"Mani Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 21,\r\n    \"name\": \"Shweta Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 22,\r\n    \"name\": \"Shraddha Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 23,\r\n    \"name\": \"Shubham Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 24,\r\n    \"name\": \"Manoj Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 25,\r\n    \"name\": \"Manish Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 26,\r\n    \"name\": \"Mayank Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 27,\r\n    \"name\": \"shreya Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 28,\r\n    \"name\": \"Shubham Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 29,\r\n    \"name\": \"Manan Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 30,\r\n    \"name\": \"Rohit Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 31,\r\n    \"name\": \"Pankaj Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 32,\r\n    \"name\": \"Sudarshan Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 33,\r\n    \"name\": \"Ram Anuj Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 34,\r\n    \"name\": \"Ripudalan Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 35,\r\n    \"name\": \"Jay Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 36,\r\n    \"name\": \"Ravi kant Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 37,\r\n    \"name\": \"Shashi Kant Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 38,\r\n    \"name\": \"Somesh Mishra\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 39,\r\n    \"name\": \"Hariom Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 40,\r\n    \"name\": \"Shriom Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 41,\r\n    \"name\": \"Rajendra Tiwari\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 42,\r\n    \"name\": \"Sushma Tiwari\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 43,\r\n    \"name\": \"Anamika Tiwari\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 44,\r\n    \"name\": \"Swati Tiwari\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 45,\r\n    \"name\": \"Abhishek Tiwari\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 46,\r\n    \"name\": \"Sanvi Dubey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 47,\r\n    \"name\": \"Parth Dubey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 48,\r\n    \"name\": \"Girish Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 49,\r\n    \"name\": \"Deepak Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n},\r\n{\r\n\t\"id\": 50,\r\n    \"name\": \"Sudheer Pandey\",\r\n    \"email\": \"default-email@domain.com\"\r\n}\r\n]","import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css'\r\nimport Scroll from './Scroll';\r\n/*import TextBox from './TextBox';*/\r\nimport {robot} from './robot';\r\n\r\nclass App extends Component {\r\n\r\nconstructor(){\r\n\tsuper()\r\n\tthis.state = {\r\n\t\trobots: robot,\r\n\t\tsearchField: ''\r\n\t}\r\n}\r\n\r\n/*componentDidMount() {\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response => response.json())\r\n\t.then(users => this.setState({robots: users}));\r\n}*/\r\n\r\nonSearchChange = (event) => {\r\n\t\tthis.setState({searchField: event.target.value})\r\n}\r\n\r\n\r\nrender() {\r\n\r\n\tconst { robots, searchField } = this.state;\r\n\t\t\tconst filterRobot = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t})\r\n\r\n\tif(robots.length === 0) {\r\n\t\treturn <h1>Robots are loading...</h1>\r\n\t}\r\n\telse{\r\n\t\treturn (\r\n\t\t\t<div className='washed-red tc'>\r\n\t\t\t\t<h1>Super Funny Robo Family</h1>\r\n\t\t\t\t<h1>Welcome to the world of funny and stylish robos!</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t{/*<TextBox handleSubmit={this.handleSubmit}/>*/}\r\n\t\t\t\t<Scroll>\r\n\t  \t\t\t<CardList robots={filterRobot}/>\r\n\t  \t\t\t{/*<CardList robots={robots}/>*/}\r\n\t  \t\t\t</Scroll>\r\n\t  \t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}